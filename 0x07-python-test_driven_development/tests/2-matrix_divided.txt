>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 4, 8], [20, 15, 8]], 2)
[[1.0, 2.0, 4.0], [10.0, 7.5, 4.0]]
>>> matrix_divided([[50, 20, 10], [12, 3, 5]], 2.5)
[[20.0, 8.0, 4.0], [4.8, 1.2, 2.0]]
>>> try:
...	matrix_divided([7, 8, 9], 2)
... except Exception as e:
...	print(e)
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...	matrix_divided([[30, 40, 6], [65, 7]], 10)
... except Exception as e:
...	print(e)
Each row of the matrix must have the same size
>>> try:
...	matrix_divided("Hello", 2)
... except Exception as e:
...	print(e)
matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 3, 6, 6], [2, 8, 8, 2]], 'd')
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[1, 3, 6, 6], [2, 8, 8, 2]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 3, 6, 6], [2, 8, 8, 2]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([[0, 0, 0, 0], [0, 0, 0, 0]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([[0, 0, 0, 0], [0, 0, 0, 0]], 2)
[[0, 0, 0, 0], [0, 0, 0, 0]]
